<?php
namespace Home\Controller;
use Think\Controller;
use Common\Tools\Sms;

class LoginController extends Controller {
    
    /**
     * [register 用户注册]
     */
    public function register() {
        $arr = I();
        $mobile = $arr['mobile'];

        echo $mobile;
        echo "<br>";
        // $params = array($code,'10');
        // $sms = new Sms($mobile,$params);
        // $sms->sendSms();
    }

    /**
     * [regSendCode 注册时发送验证码]
     * @return [type] [description]
     */
    public function regSendCode(){
        $arr = I();
        $mobile = $arr['mobile'];
        $this->sendCode($mobile);
    }

    /**
     * [sendCode 发送验证码]
     * @param  [type]  $mobile [description]
     * @param  integer $type   [0为注册，1为找回密码]
     */
    private function sendCode($mobile,$type = 0){
        if(!preg_match("/1[3458]{1}\d{9}$/",$mobile)){  
            $this->resultMsg('error','请输入正确的手机号码！');
        } 
        $table = M('mobileVerifyRecord');
        $code=sprintf("%06d",rand(1,999999));
        $ip = get_client_ip();
        $createTime = date('Y-m-d h:i:s',time());
        $endTime = date('Y-m-d',time()).' 23:59:59';
        $data = array('code'=>$code,'mobile'=>$mobile,'type'=>$type,'ip'=>$ip,'created'=>$createTime);
        $where = array('ip'=>$ip,'created'=>array('lt',$endTime));
        $count = $table->where($where)->count();
        if($count >= 5){
            $this->resultMsg('error','该IP的短信请求超过最大限制！');
        }
        $status = $table->add($data);
        //此处添加短信发送接口
        if($status){
            $params = array($code,'10');
            $sms = new Sms($mobile,$params);
            $result = $sms->sendSms();
            if($result['status'] == 'success'){
                $this->resultMsg('success','发送成功，请注意查收！');
            }else{
                $this->resultMsg('error','短信出现未知错误');
            }
        }else{
            $this->resultMsg('error','发送失败，请重试！');
        }

    }

    /**
     * 判断用户是否存在
     */
    public function checkUser(){
        $user = M("user");
        $arr = I();
        $username = $arr['username'];
        $where = array('username'=>$username);
        $result = $user->where($where)->find();
        if($username ==""){
            $this->resultMsg('errot','用户不能为空');
        }
        if($result){
            $this->resultMsg('errot','用户已经存在');
        }else{
            $this->resultMsg('success','可以注册！');
        }
    }


    /**
     * [resultMsg 公共信息返回]
     * @param  [type] $status [返回状态,success或error]
     * @param  [type] $msg    [返回消息]
     * @param  string $data   [返回值]
     * @return [type]         [json]
     */
    Public function resultMsg($status, $msg, $data = '') {
        $array['status'] = $status;
        $array['message'] = $msg;
        $array['data'] = $data;
        $this->ajaxReturn($array, 'json');
    }
}
